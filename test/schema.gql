# Define a type for a blog post
type Post {
  id: ID!
  title: String!
  content: String!
  author: User!
  comments: [Comment!]!
}

# Define a type for a user
type User {
  id: ID!
  name: String!
  email: String!
  posts: [Post!]!
}

# Define a type for comments on a blog post
type Comment {
  id: ID!
  content: String!
  author: User!
  post: Post!
}

# Define the queries that clients can execute
type Query {
  allPosts: [Post!]!
  getPostById(id: ID!): Post
  getUserById(id: ID!): User
}

# Define the mutations that clients can execute to modify data
type Mutation {
  createPost(title: String!, content: String!, authorId: ID!): Post!
  createUser(name: String!, email: String!): User!
  createComment(content: String!, authorId: ID!, postId: ID!): Comment!
}

# Define the subscriptions to get real-time updates
type Subscription {
  postCreated: Post!
  commentAdded(postId: ID!): Comment!
}
